{"version":3,"file":"kaysh.cjs.production.min.js","sources":["../src/lib/_aux.ts","../src/lib/simple-cache-store.ts","../src/lib/rxjs-cache-store.ts","../src/index.ts"],"sourcesContent":["export function __strToHash(str = ''): string {\r\n  let hash = 0,\r\n    i,\r\n    chr;\r\n\r\n  for (i = 0; i < str.length; i++) {\r\n    chr = str.charCodeAt(i);\r\n    hash = (hash << 5) - hash + chr;\r\n    hash |= 0;\r\n  }\r\n\r\n  return hash.toString(36);\r\n}\r\n\r\nfunction getShortValue(val: any) {\r\n  if (Number.isInteger(val) && String(val).length) return 'num_' + val;\r\n\r\n  if (typeof val === 'string') {\r\n    if (val.length === 0) return 'emptyString__';\r\n    return 'str_' + val;\r\n  }\r\n\r\n  if (Array.isArray(val)) {\r\n    if (val.length === 0) return 'emptyArray__';\r\n\r\n    if (val.length === 1) {\r\n      if (Number.isInteger(val[0]) && String(val[0]).length) return '_num_' + val[0];\r\n\r\n      if (typeof val[0] === 'string') {\r\n        if (val[0].length === 0) return '_emptyString__';\r\n        return '_str_' + val[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function __objToHash(val: any, fast = true) {\r\n  if (val === undefined) return '__undefined__';\r\n  if (val === null) return '__null__';\r\n\r\n  if (fast) {\r\n    let shortValue = getShortValue(val);\r\n    if (shortValue != null && shortValue.length > 0 && shortValue.length < 32) return shortValue;\r\n  }\r\n\r\n  return __strToHash(JSON.stringify(val));\r\n}\r\n","import { __objToHash } from './_aux';\r\n\r\n/*\r\nTODO: More test for shareReply\r\n      More test for pip operator and localStorage\r\n*/\r\n\r\nconst _isTest = process.env.NODE_ENV === 'test';\r\n\r\nif (_isTest) if (false) console.log('test');\r\n\r\nconst _log = console.log;\r\n\r\nlet _localStorageParentKey = 'KAYSH-V1';\r\nlet _localStorageMaxGlobalTime = 0;\r\nlet _localStorage;\r\nlet _localStorageLoaded = false;\r\nlet _keyshEnabled = true;\r\nlet _keyshLocalStorageEnabled = true;\r\ndeclare var window;\r\n\r\nconst memoFuncPrefixId = 'KAYSH-CACHE-MEMO-FUNC__';\r\n\r\n_localStorage = window?.localStorage;\r\n\r\nexport interface StoredValueModelObjRoot {\r\n  [key: string]: StoredValueModelObj;\r\n}\r\n\r\nexport interface StoredValueModelObj {\r\n  [key: string]: StoredValueModel;\r\n}\r\n\r\nexport interface StoredValueModel {\r\n  value: any;\r\n  date: number;\r\n  localStored?: boolean;\r\n  config?: DefaultConfigCacheModel;\r\n}\r\n\r\nexport interface DefaultConfigCacheModel {\r\n  localStorage?: boolean;\r\n  maxTime?: number;\r\n  maxItems?: number;\r\n}\r\n\r\nconst defaultConfig: DefaultConfigCacheModel = {\r\n  localStorage: false,\r\n  maxTime: 0,\r\n  maxItems: 10,\r\n};\r\n\r\nlet store_state: StoredValueModelObjRoot = {};\r\n\r\nfunction setCacheValue(key: string, value: any, argsToHash?: any, config?: DefaultConfigCacheModel) {\r\n  if (_keyshEnabled !== true) return;\r\n  if (key == null) return;\r\n  if (value === undefined) return;\r\n\r\n  const _hash = __objToHash(argsToHash);\r\n\r\n  const _obj = {\r\n    value,\r\n    date: Date.now().valueOf(),\r\n    localStored: false,\r\n    config: {\r\n      ...defaultConfig,\r\n      ...(config || (store_state[key] || {})?.config),\r\n    },\r\n  };\r\n\r\n  //Add Obj\r\n  let stateObjs: StoredValueModelObj = {\r\n    ...store_state[key],\r\n    [_hash]: _obj,\r\n  };\r\n\r\n  //Check MaxItems\r\n  let maxItems = Number(_obj?.config?.maxItems);\r\n  let obj = store_state[key];\r\n  if (obj != null && Object.keys(obj).length > Number(maxItems))\r\n    stateObjs = __sortStoredValueModelByDate(stateObjs, maxItems);\r\n\r\n  store_state[key] = stateObjs;\r\n\r\n  if (false) _log(JSON.stringify({ store_state, _hash, argsToHash }, null, 2));\r\n\r\n  if (__isValidLocalStorageItem(value) && config?.localStorage === true) __updateLocalStorage();\r\n\r\n  //check Promise\r\n  if (__isPromise(value)) {\r\n    value.then(_val => {\r\n      if (_val != null) setCacheValue(key, _val, argsToHash, config);\r\n    });\r\n  }\r\n}\r\n\r\nfunction getCacheValue(key: string, argsToHash?: any): any {\r\n  if (_keyshEnabled !== true) return null;\r\n\r\n  if (true && typeof window !== 'undefined' && _localStorageLoaded === false) __setLocalStoredToStore();\r\n\r\n  if (store_state[key] == null) return store_state[key];\r\n\r\n  const _hash = __objToHash(argsToHash);\r\n  const objKeyValue: StoredValueModel = store_state[key][_hash];\r\n  if (objKeyValue == null) return objKeyValue;\r\n\r\n  if (false && _isTest) _log(JSON.stringify(store_state, null, 2));\r\n\r\n  //Is maxTime\r\n  if ((objKeyValue.config?.maxTime || objKeyValue.config.localStorage) && !__checkValidItemDate(objKeyValue))\r\n    return null;\r\n\r\n  if (objKeyValue.value == null) return objKeyValue.value;\r\n\r\n  if (typeof objKeyValue.value === 'object') return Object.freeze(objKeyValue.value);\r\n\r\n  return objKeyValue.value;\r\n}\r\n\r\nfunction resetCache(key: string, argsToHash?: any) {\r\n  if (key == null) return;\r\n\r\n  if (argsToHash !== undefined) {\r\n    const _hash = __objToHash(argsToHash);\r\n    if (store_state && key in store_state && _hash in store_state[key]) {\r\n      let resetLocalStorage = __isLocalStorageItem(store_state[key][_hash]);\r\n\r\n      delete store_state[key][_hash];\r\n\r\n      if (resetLocalStorage) __updateLocalStorage();\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (store_state && key in store_state) {\r\n    delete store_state[key];\r\n    __updateLocalStorage();\r\n  }\r\n}\r\n\r\nfunction resetAllCaches() {\r\n  store_state = {};\r\n  __clearLocalStorage();\r\n}\r\n\r\nfunction memoFunction(func: Function, config?: DefaultConfigCacheModel, prefixId: string = memoFuncPrefixId): Function {\r\n  let funcName = func.name || '__memoized';\r\n  let funcKey = prefixId + func.name;\r\n\r\n  if (false) _log('funcName', funcName);\r\n\r\n  var object = {\r\n    [funcName]: function(...restArgs) {\r\n      const cache = getCacheValue(funcKey, restArgs);\r\n      if (cache !== undefined) return cache;\r\n\r\n      const res = func.apply(this, restArgs);\r\n      setCacheValue(funcKey, res, restArgs, config);\r\n      return res;\r\n    },\r\n  };\r\n\r\n  return object[funcName];\r\n}\r\n\r\nfunction resetMemoFunction(function_Or_functionName: Function | string, prefixId: string = memoFuncPrefixId): Function {\r\n  let funcKey;\r\n\r\n  if (typeof function_Or_functionName === 'string') {\r\n    funcKey = prefixId + function_Or_functionName;\r\n  } else {\r\n    funcKey = prefixId + function_Or_functionName.name;\r\n  }\r\n\r\n  const memoizedReset = function(...restArgs) {\r\n    if (restArgs !== undefined && restArgs.length) {\r\n      resetCache(funcKey, restArgs);\r\n    } else {\r\n      resetCache(funcKey);\r\n    }\r\n  };\r\n\r\n  return memoizedReset;\r\n}\r\n\r\nfunction memoFunctionDecorator(config?: DefaultConfigCacheModel, prefixId?) {\r\n  const instanceMap = new WeakMap();\r\n  return (target, propertyKey, descriptor) => {\r\n    const input = target[propertyKey]; // eslint-disable-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\r\n\r\n    if (typeof input !== 'function') {\r\n      throw new TypeError('The decorated value must be a function');\r\n    }\r\n\r\n    delete descriptor.value;\r\n    delete descriptor.writable;\r\n\r\n    descriptor.get = function() {\r\n      if (!instanceMap.has(this)) {\r\n        const value = memoFunction(input, config, prefixId);\r\n        instanceMap.set(this, value);\r\n        return value;\r\n      }\r\n      return instanceMap.get(this);\r\n    };\r\n  };\r\n}\r\n\r\nfunction __sortStoredValueModelByDate(StoredValuel: StoredValueModelObj, max: number = Infinity): StoredValueModelObj {\r\n  return Object.entries({ ...StoredValuel })\r\n    .sort(([, a], [, b]) => Number(b.date) - Number(a.date))\r\n    .slice(0, max)\r\n    .reduce((r, [k, v]) => ({ ...r, [k]: v }), {} as any);\r\n}\r\n\r\nfunction __isRxjsObservableObj(value: any) {\r\n  if (value == null) return false;\r\n\r\n  if (__isObservable(value)) return true;\r\n\r\n  return typeof value === 'object' && value.hasOwnProperty('_isScalar') && value.hasOwnProperty('source');\r\n}\r\n\r\nfunction __isFunction(value: any): boolean {\r\n  return value != null && typeof value === 'function';\r\n}\r\n\r\nfunction __isObservable(value: any): boolean {\r\n  if (value?.value != null && __isObservable(value?.value)) return true;\r\n\r\n  return (\r\n    value != null &&\r\n    typeof value === 'object' &&\r\n    (value?.constructor?.name === 'Observable' || (__isFunction(value.lift) && __isFunction(value.subscribe)))\r\n  );\r\n}\r\n\r\nfunction __isPromise(value: any): boolean {\r\n  if (value?.value != null && __isPromise(value?.value)) return true;\r\n\r\n  return value != null && Object.prototype.toString.call(value) === '[object Promise]';\r\n}\r\n\r\nfunction __isValidLocalStorageItem(val): boolean {\r\n  return !__isRxjsObservableObj(val) && !__isPromise(val);\r\n}\r\n\r\nfunction __isLocalStorageItem(val, isToLoadData = false): boolean {\r\n  let rv = __isValidLocalStorageItem(val) && val?.config?.localStorage === true && val?.date > 0;\r\n\r\n  if (isToLoadData) {\r\n    rv = rv && val.localStored === true;\r\n  }\r\n\r\n  return rv;\r\n}\r\n\r\nfunction __filterLocalStorageItems(state: any, isToLoadData?: boolean) {\r\n  if (state == null) return state;\r\n\r\n  let rv = {};\r\n  let _state = { ...state };\r\n\r\n  Object.entries(_state).forEach(([key, value]) => {\r\n    if (value != null && typeof value === 'object' && Object.keys(value).length > 0) {\r\n      //SUBKEY\r\n      rv[key] = { ..._state[key] };\r\n\r\n      Object.entries(value).forEach(([key2, value2]) => {\r\n        if (__isLocalStorageItem(value2, isToLoadData)) {\r\n          rv[key][key2] = { ...value2, localStored: true };\r\n        } else {\r\n          delete rv[key][key2];\r\n        }\r\n      });\r\n\r\n      if (Object.keys(rv[key]).length === 0) {\r\n        if (key in rv) delete rv[key];\r\n      }\r\n    } else {\r\n      if (key in rv) delete rv[key];\r\n    }\r\n  });\r\n\r\n  return rv;\r\n}\r\n\r\nfunction __updateLocalStorage() {\r\n  if (_keyshEnabled !== true || _keyshLocalStorageEnabled !== true) return null;\r\n\r\n  if (!_localStorage?.setItem) return;\r\n\r\n  let store_stateClone = __filterLocalStorageItems(store_state);\r\n\r\n  if (store_stateClone != null && typeof store_stateClone === 'object' && Object.keys(store_stateClone).length > 0) {\r\n    _localStorage.setItem(_localStorageParentKey, JSON.stringify(store_stateClone));\r\n  } else {\r\n    __clearLocalStorage();\r\n  }\r\n\r\n  if (false) _log('[updateLocalStorage]', JSON.stringify(store_stateClone, null, 2));\r\n  if (false) _log('[updateLocalStorage]', JSON.stringify(store_state, null, 2));\r\n}\r\n\r\nfunction __checkValidItemDate(objKeyValue: StoredValueModel): boolean {\r\n  let max = Number(objKeyValue.config?.maxTime || 0);\r\n\r\n  if (objKeyValue.config.localStorage && _localStorageMaxGlobalTime > 0) {\r\n    max = max === 0 ? _localStorageMaxGlobalTime : Math.min(max, _localStorageMaxGlobalTime);\r\n  }\r\n\r\n  if (!(max > 0)) return true;\r\n\r\n  let now = Date.now().valueOf();\r\n  let date = Number(objKeyValue.date);\r\n  let maxDate = date + max;\r\n\r\n  return !(now > maxDate);\r\n}\r\n\r\nfunction __getLocalStorageClass() {\r\n  return _localStorage;\r\n}\r\n\r\nfunction __setLocalStoredToStore() {\r\n  if (_keyshEnabled !== true || _keyshLocalStorageEnabled !== true) return null;\r\n\r\n  if (_localStorage?.getItem == null || !_localStorageParentKey?.length) return;\r\n  if (!_isTest && _localStorageLoaded) return;\r\n\r\n  const dataStored = _localStorage.getItem(_localStorageParentKey);\r\n\r\n  if (dataStored == null) return;\r\n\r\n  let storeStateObject = JSON.parse(dataStored);\r\n\r\n  if (storeStateObject != null) {\r\n    store_state = __filterLocalStorageItems(storeStateObject, true);\r\n    _localStorageLoaded = true;\r\n  }\r\n}\r\n\r\nfunction __getLocalStorageGlobalKey() {\r\n  return _localStorageParentKey;\r\n}\r\n\r\nfunction __setLocalStorageGlobals(\r\n  parentKey: string,\r\n  maxGlobalTime: number = null,\r\n  enabled: boolean = null,\r\n  localStorageEnabled: boolean = null\r\n) {\r\n  if (parentKey == null && maxGlobalTime == null && enabled == null && localStorageEnabled == null) return;\r\n\r\n  __clearLocalStorage();\r\n\r\n  if (parentKey != null) _localStorageParentKey = parentKey;\r\n\r\n  if (maxGlobalTime != null) _localStorageMaxGlobalTime = maxGlobalTime;\r\n\r\n  if (enabled != null) _keyshEnabled = !!enabled;\r\n\r\n  if (localStorageEnabled != null) _keyshLocalStorageEnabled = !!localStorageEnabled;\r\n}\r\n\r\nfunction __clearLocalStorage() {\r\n  if (_localStorage?.removeItem == null) return;\r\n\r\n  _localStorage.removeItem(_localStorageParentKey);\r\n\r\n  _localStorageLoaded = false;\r\n}\r\n\r\nfunction __getStoreState() {\r\n  if (store_state == null) return null;\r\n\r\n  return Object.freeze({ ...store_state } as any);\r\n}\r\n\r\nfunction __simulateRefresh() {\r\n  if (_isTest) {\r\n    if (false) _log('[simulateRefresh]');\r\n    store_state = {};\r\n    __setLocalStoredToStore();\r\n  }\r\n}\r\n\r\nconst __simpleCacheStore = {\r\n  setCacheValue,\r\n  getCacheValue,\r\n  resetCache,\r\n  resetAllCaches,\r\n  memoFunction,\r\n  memoFunctionDecorator,\r\n  resetMemoFunction,\r\n  __getLocalStorageClass,\r\n  __setLocalStoredToStore,\r\n  __clearLocalStorage,\r\n  __getLocalStorageGlobalKey,\r\n  __getStoreState,\r\n  __sortStoredValueModelByDate,\r\n  __simulateRefresh,\r\n  __setLocalStorageGlobals,\r\n  __isPromise,\r\n};\r\n\r\nexport { __simpleCacheStore };\r\n","import { MonoTypeOperatorFunction, of, ReplaySubject, Subscriber, Subscription } from 'rxjs';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { isObservable } from 'rxjs/internal/util/isObservable';\r\nimport { shareReplay, tap } from 'rxjs/operators';\r\nimport { DefaultConfigCacheModel, __simpleCacheStore } from './simple-cache-store';\r\n\r\nconst getRxjsObservableCacheValue = (key: string, argsToHash?: any): Observable<any> => {\r\n  const cache = __simpleCacheStore.getCacheValue(key, argsToHash);\r\n\r\n  if (cache == null) return cache;\r\n\r\n  if (isObservable(cache)) return cache;\r\n\r\n  return of(cache);\r\n};\r\n\r\nconst setRxjsObservableCacheValue = (\r\n  stream: Observable<any>,\r\n  key: string,\r\n  argsToHash?: any,\r\n  config?: DefaultConfigCacheModel\r\n): Observable<any> => {\r\n  if (stream == null || key == null) return of(null);\r\n\r\n  const setCache = ($data: any) => {\r\n    if ($data != null) __simpleCacheStore.setCacheValue(key, $data, argsToHash, config);\r\n  };\r\n\r\n  let cacheReplay = stream.pipe(shareReplay());\r\n\r\n  setCache(cacheReplay);\r\n\r\n  return cacheReplay.pipe(\r\n    shareReplay(),\r\n    tap((_data: any) => setCache(_data))\r\n  );\r\n};\r\n\r\nconst observableCache = (\r\n  stream: Observable<any>,\r\n  key: string,\r\n  argsToHash?: any,\r\n  config?: DefaultConfigCacheModel,\r\n  forceUpdate = false\r\n) => {\r\n  const cache = getRxjsObservableCacheValue(key, argsToHash);\r\n\r\n  if (forceUpdate === false && cache != null) return cache;\r\n\r\n  return setRxjsObservableCacheValue(stream, key, argsToHash, config);\r\n};\r\n\r\nexport function kayshOperator<T>(\r\n  key: string,\r\n  argsToHash?: any,\r\n  config?: DefaultConfigCacheModel,\r\n  forceUpdate = false\r\n): MonoTypeOperatorFunction<T> {\r\n  function __shareReplayOperator<T>() {\r\n    let subject: ReplaySubject<T> | undefined;\r\n    let refCount = 0;\r\n    let subscription: Subscription | undefined;\r\n    let hasError = false;\r\n    let isComplete = false;\r\n\r\n    return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\r\n      refCount++;\r\n      let innerSub: Subscription;\r\n      if (!subject || hasError) {\r\n        hasError = false;\r\n        subject = new ReplaySubject<T>();\r\n        innerSub = subject.subscribe(this);\r\n        subscription = source.subscribe({\r\n          next(value) {\r\n            subject.next(value);\r\n          },\r\n          error(err) {\r\n            hasError = true;\r\n            subject.error(err);\r\n          },\r\n          complete() {\r\n            isComplete = true;\r\n            subscription = undefined;\r\n            subject.complete();\r\n          },\r\n        });\r\n\r\n        if (isComplete) {\r\n          subscription = undefined;\r\n        }\r\n      } else {\r\n        innerSub = subject.subscribe(this);\r\n      }\r\n\r\n      this.add(() => {\r\n        refCount--;\r\n        innerSub.unsubscribe();\r\n        innerSub = undefined;\r\n        if (subscription && !isComplete && refCount === 0) {\r\n          subscription.unsubscribe();\r\n          subscription = undefined;\r\n          subject = undefined;\r\n        }\r\n      });\r\n    };\r\n  }\r\n\r\n  return (source: Observable<T>) => {\r\n    const cacheObs = observableCache(source, key, argsToHash, config, forceUpdate);\r\n    return cacheObs.lift(__shareReplayOperator());\r\n  };\r\n}\r\n\r\nconst kayshFlushOperator = (key: string, argsToHash?: any) => {\r\n  return __simpleCacheStore.resetCache(key, argsToHash);\r\n};\r\n\r\nconst __rxCacheStore = {\r\n  observableCache,\r\n  kayshFlushOperator,\r\n  kayshOperator,\r\n  getRxjsObservableCacheValue,\r\n  setRxjsObservableCacheValue,\r\n  resetCache: __simpleCacheStore.resetCache,\r\n  resetAllCaches: __simpleCacheStore.resetAllCaches,\r\n};\r\n\r\nexport { __rxCacheStore as __rxjsCacheStore };\r\n","import { __rxjsCacheStore } from './lib/rxjs-cache-store';\r\nimport { __simpleCacheStore } from './lib/simple-cache-store';\r\n\r\nconst kayshOperator = __rxjsCacheStore.kayshOperator;\r\nconst kayshFlushOperator = __rxjsCacheStore.kayshFlushOperator;\r\n\r\nconst kayshDecorator = __simpleCacheStore.memoFunctionDecorator;\r\nconst kayshMemFunction = __simpleCacheStore.memoFunction;\r\nconst kayshFlushMemFunction = __simpleCacheStore.resetMemoFunction;\r\nconst kayshFlushAll = __simpleCacheStore.resetAllCaches;\r\nconst kayshFlushValue = __simpleCacheStore.resetCache;\r\n\r\nconst simpleKaysh = __simpleCacheStore;\r\nconst rxjsKaysh = __rxjsCacheStore;\r\n\r\nexport {\r\n  kayshOperator,\r\n  kayshFlushOperator,\r\n  kayshDecorator,\r\n  kayshFlushMemFunction,\r\n  kayshFlushAll,\r\n  kayshFlushValue,\r\n  kayshMemFunction,\r\n  simpleKaysh,\r\n  rxjsKaysh,\r\n};\r\n"],"names":["__objToHash","val","fast","undefined","shortValue","Number","isInteger","String","length","Array","isArray","getShortValue","str","i","hash","charCodeAt","toString","__strToHash","JSON","stringify","_localStorage","_localStorageParentKey","_localStorageMaxGlobalTime","_localStorageLoaded","_keyshEnabled","_keyshLocalStorageEnabled","window","_window","localStorage","defaultConfig","maxTime","maxItems","store_state","setCacheValue","key","value","argsToHash","config","_hash","_obj","date","Date","now","valueOf","localStored","_ref","stateObjs","_obj$config","obj","Object","keys","__sortStoredValueModelByDate","__isValidLocalStorageItem","__updateLocalStorage","__isPromise","then","_val","getCacheValue","__setLocalStoredToStore","objKeyValue","max","Math","min","__checkValidItemDate","freeze","resetCache","resetLocalStorage","__isLocalStorageItem","memoFunction","func","prefixId","funcName","name","funcKey","restArgs","cache","res","apply","this","StoredValuel","Infinity","entries","sort","a","slice","reduce","r","__isFunction","prototype","call","__isObservable","constructor","lift","subscribe","hasOwnProperty","isToLoadData","rv","__filterLocalStorageItems","state","_state","forEach","key2","value2","_localStorage2","setItem","store_stateClone","__clearLocalStorage","getItem","_localStorageParentKe","dataStored","storeStateObject","parse","removeItem","__simpleCacheStore","resetAllCaches","memoFunctionDecorator","instanceMap","WeakMap","target","propertyKey","descriptor","input","TypeError","writable","get","has","set","resetMemoFunction","function_Or_functionName","__getLocalStorageClass","__getLocalStorageGlobalKey","__getStoreState","__simulateRefresh","__setLocalStorageGlobals","parentKey","maxGlobalTime","enabled","localStorageEnabled","getRxjsObservableCacheValue","isObservable","of","setRxjsObservableCacheValue","stream","setCache","$data","cacheReplay","pipe","shareReplay","tap","_data","observableCache","forceUpdate","__rxCacheStore","kayshFlushOperator","kayshOperator","source","subject","subscription","refCount","hasError","isComplete","innerSub","ReplaySubject","next","error","err","complete","add","unsubscribe","__rxjsCacheStore","kayshMemFunction","kayshFlushMemFunction","kayshFlushAll","kayshFlushValue","simpleKaysh","rxjsKaysh"],"mappings":"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"}